TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints< 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
function(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("This is me")
submit()
submit()
submit()
mad_libs(Hyd, small, stone)
mad_libs("hyd", "small", "stone")
submit()
%p%("I", "love")
%p%("I", "love", "R")
submit()
submit()
info()
submit()
"I" %p "love" %p "R!"
'I' %p 'love' %p 'R!'
submit()
info()
'I' %p% 'love' %p% 'R!'
java -version
install.packages("rJava")
library
library(rJava)
R,version()
R.verson()
R.version()
R.Version()
install.packages('rJava',,'http://www.rforge.net/')
install.packages('rJava',,'http://www.rforge.net/')
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
Sys.getenv("JAVA_HOME")
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
install.packages("rJava")
java -version
library(rJava)
java -version
java -version
install.packages(rJava)
install.packages("rJava")
library(rJava)
echo JAVA_HOME
Sys.setenv(JAVA_HOME='C:\Program Files\Java')
Sys.setenv(JAVA_HOME="C:\Program Files\Java")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java')
library(rJava)
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
library(rJava)
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_60')
library(rJava)
library(xlsx)
java -version
install.packages("xlsx")
install.packages("xlsx")
java -version
library(xlsx)
library(xlsx)
library(rJava)
r -version
source("http://www.openintro.org/stat/data/present.R")
present
dim(present)
names(present)
year
present(year)
View(present)
present$girls
plot(x = present$year, y = present$girls)
plot(x = present$year, y = present$girls, type = "1")
plot(x = present$year, y = present$girls, type = "l")
?plot
present$boys + present$ girls
present$boys + present$girls
plot(present$year, present$boys + present$girls, type = "l")
cummax(present$boys + present$girls)
x <- present$boys + present$girls
which.max(x)
present[which.max(x), ]
plot(present$year, present$boys/(present$boys + present$girls), type = "l")
plot(present$year, present$boys > present$girls, type = "l")
plot(present$year, present$boys/present$girls, type = "l")
plot(present$year, Mod(present$boys - present$girls), type = "l")
x <- Mod(present$boys - present$girls)
present[which.max(x), ]
install.packages("rvest")
library(rvest)
dripdata <- html("http://dir.indiamart.com/impcat/drip-irrigation-systems.html")
vignette("selectorgadget")
html("listing-address-container")
dripdata %>%
html_node("listing-address-container") %>%
html_text() %>%
as.numeric()
dripdata %>%
html_node("nbrd") %>%
html_text()
dripdata %>%
html_node(dripdata, nbrd) %>%
html_text( %>%)
dripdata %>%
html_node(dripdata, nbrd) %>%
html_text() %>%
as.numeric()
dripdata %>%
html_node(nbrd) %>%
html_text() %>%
as.numeric()
dripdata %>%
html_node("box nbrd") %>%
html_text() %>%
as.numeric()
sheet <- html_nodes(dripdata, ".nbrd")
sheet1 <- html_text(sheet)
drip <- html_table(sheet)
html_table(sheet)
html_table()
sheet()
sheet
sheet <- html_nodes(dripdata, ".nbrd")
source("http://www.openintro.org/stat/data/cdc.R")
names(cdc)
nrow(cdc)
dimnames(cs)
dimnames(cdc)
dim(cdc)
attr(cdc, cdc$weight)
?attr
attr(cdc$weight)
attributes(cdc$weight)
head(cdc$weight)
cdc$weight
head(cdc$gender)
head(cdc$smoke100)
length(x$gender == m)
x <- cdc[cdc$gender == m, ]
length(x)
x <- subset(cdc, cdc$gender == "m")
nrow(x)
hist(cdc$genhlth)
summary(cdc$weight)
table(cdc$smoke100)
table(cdc$smoke100)/20000
table(cdc$gender)
table(cdc$genhlth)/20000
gender_smokers = table(cdc$gender, cdc$smoke100)
mosaicplot(gender_smokers)
dim(cdc)
cdc[567, 6]
cdc[1:10, 6]
1:10
cdc[1:10, ]
under23_and_smoke <- subset(cdc, cdc$age < 23 & cdc$smoke100 == "1")
dim(under23_and_smoke)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~ cdc$gender)
bmi <- (cdc$weight / cdc$height)
bmi <- (cdc$weight / cdc$height^2) * 703
boxplot(bmi ~ cdc$genhlth)
names(cdc$genhlth)
table(cdc$genhlth)
hist(cdc$age)
hist(bmi)
hist(bmi, breaks = 50)
plot(cdc$weight, cdc$wtdesire)
qnorm(0.025)
qnorm(0.495)
qnorm(0.01)
getwd()
setwd("C:/Users/Deepa Garimella/datasciencecoursera")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile <- "./activity_monitoring_data")
unzip("./activity_monitoring_data.zip", exdir = ".")
data <- read.csv("./activity.csv")
data$date <- strptime(data$date, "%Y-%m-%d"
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile <- "./activity_monitoring_data")
unzip("./activity_monitoring_data.zip", exdir = ".")
data <- read.csv("./activity.csv")
data$date <- strptime(data$date, "%Y-%m-%d")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile <- ".data//activity_monitoring_data")
unzip("./activity_monitoring_data.zip", exdir = "./data")
data <- read.csv("./data/activity.csv")
head(data)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile <- ".data/activity_monitoring_data")
unzip("./activity_monitoring_data.zip", exdir = "./data")
data <- read.csv("./data/activity.csv")
data$date <- strptime(data$date, "%Y-%m-%d")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile <- "./data/activity_monitoring_data")
unzip("./activity_monitoring_data.zip", exdir = "./data")
data <- read.csv("./data/activity.csv")
unzip("./data/activity_monitoring_data.zip", exdir = "./data")
data <- read.csv("./data/activity.csv")
str(data)
data$date <- strptime(data$date, "%Y-%m-%d")
cdata <- ddply(data, c("date"), summarise, N = sum(!is.na(steps)))
library(dplry)
library(dplyr)
library(plyr)
cdata <- ddply(data, c("date"), summarise, N = sum(!is.na(steps)))
hist(cdata$N)
cdata <- ddply(data, c("date"), summarise, N = sum(steps))
hist(cdata$N)
cdata <- ddply(data, c("date"), summarise, N = sum(steps, na.rm=TRUE))
hist(cdata$N)
cdata <- ddply(data, c("date"), summarise, N = sum(steps))
cdata <- ddply(data, c("date"), summarise, N = sum(steps), mean = mean(steps), median = median(steps))
head(cdata)
cdata
cdata <- ddply(data, c("date"), summarise, N = sum(steps, na.rm = TRUE), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
cdata
head(data)
str(data)
data[1, ]
data[1:20, 3]
head(cdata)
with(data, plot(interval, date))
with(data, plot(interval, date), tupe = "l")
with(data, plot(interval, date), type = "l")
with(data, plot(interval, date, type = "l"))
library(lattuce)
library(lattice)
with(cdata, plot(mean, date))
with(cdata, plot(mean, date, type = "l"))
with(cdata, plot(date, mean, type = "l"))
with(cdata, plot(mean, date, type = "l"))
str(cdata)
cdata[50, 2]
cdata[50,]
cdata[40:45, ]
cdata <- ddply(data, c("date"), summarise,
interval = interval,
N = sum(steps, na.rm = TRUE),
mean = mean(steps, na.rm = TRUE),
median = median(steps, na.rm = TRUE))
mean(data$steps)
mean(data$steps, na.rm=TRUE)
head(steps)
head(data)
mean(cdata$steps)
mean(cdata$steps, na.rm=TRUE)
head(cdata)
mean(cdata$N, na.rm=TRUE)
mean(cdata$N)
median(cdata$N)
cdata <- ddply(data, c("date"), summarise,
interval = interval,
N = sum(steps),
mean = mean(steps),
median = median(steps))
cdata <- ddply(data, c("date"), summarise,
N = sum(steps),
mean = mean(steps),
median = median(steps))
mean(cdata$N)
mean(cdata$N, na.rm=TRUE)
median(cdata$N, na.rm=TRUE)
cdata <- ddply(data, c("date"), summarise, N = sum(steps))
mean(cdata$N, na.rm=TRUE)
median(cdata$N, na.rm=TRUE)
with(data, plot(interval, steps, tupe = "l"))
with(data, plot(interval, steps, type = "l"))
with(data, plot(interval, steps, type = "l", breaks = 5))
data1 <- tbl_df(data)
data1
str(cdata)
str(data)
cdata1 <- group_by(data, date)
cdata1 <- group_by(data, date, steps)
cdata1 <- group_by(data, date)
head(data)
data[1:20,]
data[21:30,]
data[45:60,]
data[560:570,]
data[660:670,]
xyplot(interval ~ steps | data = data)
xyplot(interval ~ steps | data)
data1 <- data
xyplot(interval ~ steps | data = data1)
xyplot(interval ~ steps | date, data = data1)
str(cdata)
with(data1, plot(interval ~ steps | date, type = "l"))
with(data1, plot(interval ~ date | steps, type = "l"))
with(data1, plot(interval, date, steps, type = "l"))
head(data1)
install.packages("lubridate")
library(lubridate)
data[4500, ]
data[5600,]
mutate(data1, week_day = weekdays(date))
data1 <- mutate(data1, week_day = weekdays(date))
str(data1)
head(data1)
cdata1 <- ddply(data1, c("weekday", "interval"), summarise, N = sum(steps))
cdata1 <- ddply(data1, c("week_day", "interval"), summarise, N = sum(steps))
cdata1 <- ddply(data1, c("date"), transform, summarise, N = sum(steps))
cdata1 <- ddply(data1, c("date"), transform, N = sum(steps))
cdata1 <- ddply(data1, c("date"), transform, summarise, N = sum(steps))
df <- data.frame(data1)
df
cdata1 <- ddply(df, "date", transform, summarise, N = sum(steps))
cdata1 <- ddply(data1, "date", transform, summarise, N = sum(steps))
cdata1 <- ddply(data1, .(date), transform, summarize, N = sum(steps))
head(data1)
cdata1 <- ddply(data1, c("date", "week_day", "interval"), transform, summarize, N = sum(steps))
cdata1 <- ddply(data1, c("date"), transform, summarize, N = sum(steps))
cdata1 <- ddply(data1, "date", transform, N = sum(steps))
str(data1$date)
data1$date <- as.Date(data1$date)
str(Data1)
str(data1)
str(data1$date)
cdata1 <- ddply(data1, "date", transform, N = sum(steps))
head(cdata1)
str(cdata1)
cdata1[4500, ]
cdata1[4500:4510, ]
cdata2 <- ddply(data1, c("week_day", "interval"), meansteps = mean(steps, na.rm=TRUE))
head(cdata2)
str(cdata2)
cdata2 <- ddply(data1, c("week_day", "interval"), summarise, meansteps = mean(steps, na.rm=TRUE))
str(cdata2)
head(cdata2)
with(cdata2, plot(interval, meansteps))
with(cdata2, plot(interval, meansteps, type = "l"))
cdata2 <- ddply(data1, c("interval", "week_day"), summarise, meansteps = mean(steps, na.rm=TRUE))
head(cdata2)
str(cdata2)
with(cdata2, plot(interval, meansteps, type = "l"))
with(cdata2, plot(interval, meansteps, type = "l", n = count(interval)))
with(cdata2, plot(interval, meansteps, type = "l", n = count("interval")))
with(cdata2, plot(interval, meansteps, type = "l", n = 10))
with(cdata2, plot(interval, meansteps, type = "n"))
lines(meansteps, col = "blue")
lines(cdata1$meansteps, col = "blue")
with(cdata2, plot(interval, meansteps, type = "l"))
with(cdata2, lines(col = "blue"))
with(cdata2, lines(meansteps, col = "blue"))
with(cdata2, plot(interval, meansteps, type = "l"))
col = "red"
cdata2
str(cdata2)
head(cdata2)
max(cdata2$meansteps)
summarize(cdata2)
summarize(cdata2$meansteps)
summarise(cdata2$meansteps)
summarise(cdata2)
summary(ccdata)
summary(cdata2)
which.max(cdata2[, 3])
cdata[743,]
cdata2[743,]
cdata2[which.max(cdata2[, 3]), ]
count(is.na(data1))
sum(is.na(data1))
sum(is.na(data1$steps))
sum(is.na(data1$date))
sum(is.na(data1$interval))
sum(is.na(data1$weekday))
sum(is.na(data1$week_day))
example <- subset(data1, data1$week_day=="Sunday")
head(example)
sum(df$col==value,na.rm=FALSE)
sum(data1$col==value,na.rm=FALSE)
sum(data1[, 1:4==value,na.rm=FALSE)
sum(data1[, 1:4]==value,na.rm=FALSE)
sum(data1[, 1:4],na.rm=FALSE)
na_count <- sapply(data1, function(X) sum(length(which(is.na))))
na_count <- sapply(data1, function(X) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
na_count
na_count <- sapply(data1, function(x) sum(length(which(is.na(x)))))
na_count <- data.frame(na_count)
na_count
head(data1)
head(cdata2)
data2 <- data1
data2$steps[is.na(data2$steps)] = daymean(data2$meansteps[is.na(data2$steps)])
daymean <- function(x) {
temp <- ddply(data2, c("interval", "week_day"), summarise,
meansteps = mean(steps, na.rm=TRUE))
}
data2$steps[is.na(data2$steps)] = daymean(data2$meansteps[is.na(data2$steps)])
daymean <- function(x) {
temp <- ddply(x, c("interval", "week_day"), summarise,
meansteps = mean(steps, na.rm=TRUE))
}
head(data2)
data2$steps[is.na(data2$steps)] = daymean(data2$meansteps[is.na(data2$steps)])
daymean <- function(x) {
temp <- ddply(x, c("interval", "week_day"), summarise,
meansteps = mean(steps, na.rm=TRUE))
temp <- data.frame(temp)
}
head(data2)
str(data2)
head(data1)
data2 <- data1
head(data2)
head(cdata2)
data3 <- merge(data2, cdata2, sort = FALSE)
head(data3)
head(cdata2)
head(data2)
data3 <- merge(cdata2, data2, sort = FALSE)
head(cdata3)
head(data3)
data3 <- merge(data2, cdata2, sort = FALSE)
data3[1:20]
data3[1:20, ]
head(data2)
data3 <- merge(data2, cdata2)
head(data3)
data3 <- merge(data2, cdata2, all = TRUE)
head(data3)
data3 <- merge(data2, cdata2, all = TRUE, sort = TRUE)
head(data2)
head(data3)
head(cdata2)
data3 <- merge(data2, cdata2, by = "date", all = TRUE)
data3 <- data3[order(date), ]
data3 <- arrange(data3, date)
head(data3)
data3[1:40, ]
data3$steps[is.na(data3$steps)] <- data3$meansteps[is.na(data3$steps)]
head(data3)
hist(data2$steps)
cdata3 <- ddply(data3, c("date"), summarise, N = sum(steps))
hist(cdata3$N)
mean(cdata3$N, na.rm=TRUE)
median(cdata3$N, na.rm=TRUE)
data3 <- mutate(data3, daytype = ifelse(week_day in c("Saturday", "Sunday"), "weekend", "weekday"))
data3 <- mutate(data3, daytype = ifelse(week_day %in% c("Saturday", "Sunday"), "weekend", "weekday"))
head(data3)
tail(data3)
data3[20:50, ]
with(cdata2, plot(interval, meansteps))
with(cdata2, plot(interval, meansteps, type = "l"))
par(mfrow = 2,1)
par(mfrow = c(2,1))
cdata4 <- ddply(data1, c("interval", "daytype"), summarise, meanstepsnew = mean(steps, na.rm=TRUE))
cdata4 <- ddply(data3, c("interval", "daytype"), summarise, meanstepsnew = mean(steps, na.rm=TRUE))
with(cdata2, plot(interval, meansteps, type = "l", factor = "daytype"))
xyplot(interval ~ meanstepsnew | cdata4, groups = daytype)
xyplot(interval ~ meanstepsnew | daytype)
head(cdata4)
xyplot(interval ~ meanstepsnew | daytype, cdata4)
par(mfrow = c(1,2))
xyplot(interval ~ meanstepsnew | daytype, cdata4, type = "l")
par(mfrow = c(2,1))
xyplot(interval ~ meanstepsnew | daytype, cdata4, type = "l")
par(mfrow = c(1,1))
xyplot(interval ~ meanstepsnew | daytype, cdata4, type = "l")
?trellis.par.get
xyplot(meanstepsnew ~ interval | daytype, cdata4, type = "l")
xyplot(meanstepsnew ~ interval | daytype, cdata4, type = "l", layout = c(1, 2))
str(cdata4)
table(cdata4)
table(cdata4$daytype)
head(cdata4)
install.packages("gridExtra")
max(cdata1$N)
max(cdata1$N, na.rm=TRUE)
max(count(cdata1$N), na.rm=TRUE)
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
getwd()
setwd("C:/Users/Deepa Garimella/datasciencecoursera/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
